import os
import requests
import subprocess

# Get environment variables
artifactory_url = os.environ.get("ARTIFACTORY_URL")
artifactory_user = os.environ.get("ARTIFACTORY_USER")
artifactory_api_key = os.environ.get("ARTIFACTORY_API_KEY")
repository_name = os.environ.get("REPOSITORY_NAME")
folder_path = os.environ.get("FOLDER_PATH")

# Check if folder exists
folder_url = f"{artifactory_url}/api/storage/{repository_name}/{folder_path}"
response = requests.get(folder_url, auth=(artifactory_user, artifactory_api_key))

if response.status_code != 200:
    print(f"The folder {folder_path} does not exist in repository {repository_name}. Exiting.")
    exit(1)

# Check if folder is empty
items_url = f"{artifactory_url}/api/storage/{repository_name}/{folder_path}?list&deep=1"
response = requests.get(items_url, auth=(artifactory_user, artifactory_api_key))

if response.status_code != 200:
    print(f"Failed to get list of items in folder {folder_path}. Exiting.")
    exit(1)

items = response.json()["files"]
if len(items) == 0:
    print(f"The folder {folder_path} is empty. Exiting.")
    exit(0)

# Get list of images to delete
images_to_delete = []
for item in items:
    if "properties" in item and "docker.manifest" in item["properties"]:
        manifest_url = f"{artifactory_url}/{item['uri']}/manifest.json"
        manifest_response = requests.get(manifest_url, auth=(artifactory_user, artifactory_api_key))

        if manifest_response.status_code == 200:
            manifest = manifest_response.json()
            if "created" in manifest and "lastDownloaded" in manifest:
                created_time = manifest["created"]
                last_downloaded_time = manifest["lastDownloaded"]

                if created_time < 0 and last_downloaded_time < 0:
                    images_to_delete.append(item["uri"])
        else:
            print(f"Failed to get manifest for image {item['uri']}. Skipping.")

# Delete images
if len(images_to_delete) == 0:
    print("No images to delete.")
else:
    for image in images_to_delete:
        delete_url = f"{artifactory_url}/{image}"
        response = requests.delete(delete_url, auth=(artifactory_user, artifactory_api_key))
        if response.status_code == 204:
            print(f"Image {image} deleted successfully.")
        else:
            print(f"Failed to delete image {image}. Status code: {response.status_code}.")
